// Generated by CoffeeScript 1.7.1
(function() {
  define(["corejs", "ng-route", "ng-fire"], function(Core, ng_route, ng_fire) {
    return Core.register("dashboard", function(sandbox) {
      return {
        init: function() {
          console.log("Starting dashboard...");
          return sandbox.listen("config-data", this.runDashboard);
        },
        runDashboard: function(data) {
          var angular, app, href;
          href = data.config.db;
          angular = sandbox.use("angular");
          if (!angular) {
            this.destroy();
          }
          app = angular.module("dashboard", ["ngRoute", "firebase"]);
          app.config(function($routeProvider) {
            return $routeProvider.when("/", {
              templateUrl: "dashboard.html"
            }).when("/api/v0.1/test/:value", {
              redirectTo: function(routeParams, path, search) {
                var k, searches, v, value;
                searches = "?";
                for (k in search) {
                  v = search[k];
                  searches += "" + k + "=" + v + "&";
                }
                searches = searches.slice(0, -1);
                value = routeParams.value;
                return window.location = "api/v0.1/test/" + value + searches;
              }
            }).when("/data/test", {
              templateUrl: "datatest.html",
              controller: "DataTestCtrl"
            }).otherwise({
              templateUrl: "otherwise.html"
            });
          });
          app.factory("testEntries", function($firebaseArray) {
            var ref;
            ref = new Firebase(href + "api/test");
            return $firebaseArray(ref);
          });
          app.controller("DataTestCtrl", function($scope, testEntries) {
            return $scope.test = {
              entries: testEntries
            };
          });
          return angular.bootstrap($("#index"), ["dashboard"]);
        },
        destroy: function() {
          return console.log("Stopping dashboard...");
        }
      };
    });
  });

}).call(this);
